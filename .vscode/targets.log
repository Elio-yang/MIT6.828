make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Mon Nov  1 13:31:12 2021

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
DESKTOP_SESSION = ubuntu
# default
.SHELLFLAGS := -c
# makefile (from 'GNUmakefile', line 52)
QEMU := qemu-system-i386
# environment
XDG_SESSION_CLASS = user
# environment
XDG_SESSION_TYPE = x11
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
IM_CONFIG_PHASE = 1
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile
CURDIR := /home/eliot/Desktop/lab
# makefile (from 'conf/lab.mk', line 2)
PACKAGEDATE = Wed Sep 12 14:51:29 EDT 2018
# makefile
SHELL = /bin/sh
# makefile (from 'GNUmakefile', line 76)
NM := nm
# makefile (from 'GNUmakefile', line 125)
USER_CFLAGS :=    -O1 -fno-builtin -I. -MD -fno-omit-frame-pointer -std=gnu99 -static -Wall -Wno-format -Wno-unused -Werror -gstabs -m32 -fno-tree-ch -fno-stack-protector -DJOS_USER -gstabs
# makefile (from 'conf/env.mk', line 9)
V = @
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/share/code/code
# makefile (from 'GNUmakefile', line 97)
CFLAGS :=    -O1 -fno-builtin -I. -MD -fno-omit-frame-pointer -std=gnu99 -static -Wall -Wno-format -Wno-unused -Werror -gstabs -m32 -fno-tree-ch -fno-stack-protector
# makefile (from 'GNUmakefile', line 256)
UPSTREAM := origin
# environment
JOURNAL_STREAM = 8:34668
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# makefile (from 'GNUmakefile', line 67)
GDBPORT := 26000
# makefile (from 'GNUmakefile', line 145)
IMAGES = $(OBJDIR)/kern/kernel.img
# makefile (from 'GNUmakefile', line 103)
ULDFLAGS := -T user/user.ld
# makefile (from 'obj/.deps', line 1)
MAKEFILE_LIST :=  GNUmakefile conf/lab.mk conf/env.mk boot/Makefrag kern/Makefrag obj/.deps
# automatic
@F = $(notdir $@)
# environment
GIO_LAUNCHED_DESKTOP_FILE = /usr/share/applications/code.desktop
# environment
USERNAME = eliot
# makefile (from 'GNUmakefile', line 24)
TOP = .
# environment
MAKELEVEL := 0
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from 'GNUmakefile', line 71)
AS := as
# makefile (from 'kern/Makefrag', line 8)
OBJDIRS :=  boot kern
# makefile (from 'GNUmakefile', line 79)
NCC := gcc  -pipe
# makefile (from 'boot/Makefrag', line 10)
BOOT_OBJS := obj/boot/boot.o obj/boot/main.o
# environment
MANAGERPID = 1300
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
LC_NAME = zh_CN.UTF-8
# environment
VSCODE_CWD = /home/eliot
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# makefile (from 'GNUmakefile', line 73)
LD := ld
# makefile (from 'GNUmakefile', line 80)
NATIVE_CFLAGS :=    -I. -MD -Wall
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
GJS_DEBUG_OUTPUT = stderr
# environment
SESSION_MANAGER = local/eliot-VirtualBox:@/tmp/.ICE-unix/1565,unix/eliot-VirtualBox:/tmp/.ICE-unix/1565
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'GNUmakefile', line 72)
AR := ar
# environment
XDG_MENU_PREFIX = gnome-
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_CRASH_REPORTER_START_OPTIONS = {"companyName":"Microsoft","productName":"VSCode","submitURL":"appcenter://code?aid=fba07a4d-84bd-4fc8-a125-9640fc8ce171&uid=efd8893e-8317-447d-b919-1f85d131bd8e&iid=efd8893e-8317-447d-b919-1f85d131bd8e&sid=efd8893e-8317-447d-b919-1f85d131bd8e","uploadToServer":true}
# environment
INVOCATION_ID = c9b570e4d8a645afbb926a1fa7ba6ee5
# makefile (from 'GNUmakefile', line 100)
LDFLAGS := -m elf_i386
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
LS_COLORS = 
# environment
XDG_SESSION_DESKTOP = ubuntu
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 11897
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /home/eliot/Desktop/lab
# makefile (from 'GNUmakefile', line 105)
GCC_LIB := /usr/lib/gcc/x86_64-linux-gnu/9/32/libgcc.a
# default
.LOADED := 
# environment
SSH_AGENT_PID = 1517
# makefile (from 'GNUmakefile', line 124)
KERN_CFLAGS :=    -O1 -fno-builtin -I. -MD -fno-omit-frame-pointer -std=gnu99 -static -Wall -Wno-format -Wno-unused -Werror -gstabs -m32 -fno-tree-ch -fno-stack-protector -DJOS_KERNEL -gstabs
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# environment
GTK_MODULES = gail:atk-bridge
# makefile (from 'conf/lab.mk', line 1)
LAB = 2
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/services/extensions/node/extensionHostProcess
# environment
HOME = /home/eliot
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from 'GNUmakefile', line 223)
WEBSUB := https://6828.scripts.mit.edu/2018/handin.py
# environment
VSCODE_CODE_CACHE_PATH = /home/eliot/.config/Code/CachedData/c13f1abb110fc756f9b3a6f16670df9cd9d4cf63
# makefile (from 'GNUmakefile', line 81)
TAR := gtar
# environment
LOGNAME = eliot
# makefile (from 'kern/Makefrag', line 36)
KERN_SRCFILES := kern/entry.S kern/entrypgdir.c kern/init.c kern/console.c kern/monitor.c kern/pmap.c kern/kclock.c kern/printf.c kern/kdebug.c lib/printfmt.c lib/readline.c lib/string.c
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# automatic
+F = $(notdir $+)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'kern/Makefrag', line 43)
KERN_OBJFILES := obj/kern/entry.o obj/kern/entrypgdir.o obj/kern/init.o obj/kern/console.o obj/kern/monitor.o obj/kern/pmap.o obj/kern/kclock.o obj/kern/printf.o obj/kern/kdebug.o  obj/kern/printfmt.o  obj/kern/readline.o  obj/kern/string.o
# environment
LC_TIME = zh_CN.UTF-8
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
QT_IM_MODULE = ibus
# environment
SHLVL = 0
# makefile (from 'GNUmakefile', line 69)
CC := gcc -pipe
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-74251f47-72a6-4d8a-9a28-19862c6825da.sock
# default
MAKE_VERSION := 4.2.1
# environment
USER = eliot
# environment
LC_MONETARY = zh_CN.UTF-8
# makefile
.DEFAULT_GOAL := all
# environment
XDG_CURRENT_DESKTOP = Unity
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
LC_TELEPHONE = zh_CN.UTF-8
# makefile (from 'GNUmakefile', line 36)
GCCPREFIX := 
# default
MAKE_COMMAND := make
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-3ad65983-1.61.1-main.sock
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
BREAKPAD_DUMP_LOCATION = /home/eliot/.config/Code/exthost Crash Reports
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'GNUmakefile', line 75)
OBJDUMP := objdump
# environment
GDK_BACKEND = x11
# makefile (from 'GNUmakefile', line 22)
LABSETUP = ./
# environment
LC_PAPER = zh_CN.UTF-8
# environment
QT_ACCESSIBILITY = 1
# makefile (from 'GNUmakefile', line 146)
QEMUOPTS = -drive file=$(OBJDIR)/kern/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT) $(shell if $(QEMU) -nographic -help | grep -q '^-D '; then echo '-D qemu.log'; fi) $(QEMUEXTRA)
# 'override' directive
.SHELLSTATUS := 0
# default
MAKEFILES := 
# environment
LC_NUMERIC = zh_CN.UTF-8
# automatic
<F = $(notdir $<)
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from 'GNUmakefile', line 8)
OBJDIR := obj
# environment
LC_MEASUREMENT = zh_CN.UTF-8
# makefile (from 'GNUmakefile', line 82)
PERL := perl
# environment
LC_ALL = C
# makefile (from 'kern/Makefrag', line 45)
KERN_BINFILES := 
# makefile (from 'GNUmakefile', line 70)
GDB := gdb
 
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# automatic
^F = $(notdir $^)
# makefile (from 'GNUmakefile', line 74)
OBJCOPY := objcopy
# default
SUFFIXES := 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
WINDOWPATH = 2
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# environment
LC_IDENTIFICATION = zh_CN.UTF-8
# default
.RECIPEPREFIX := 
# environment
LC_ADDRESS = zh_CN.UTF-8
# makefile (from 'kern/Makefrag', line 10)
KERN_LDFLAGS := -m elf_i386 -T kern/kernel.ld -nostdlib
# environment
LANG = C
# environment
VSCODE_PID = 11897
# variable set hash-table stats:
# Load=146/1024=14%, Rehash=0, Collisions=43/321=13%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# lib (device 2053, inode 2229190): 5 files, no impossibilities.
# obj/kern: could not be stat'd.
# obj (device 2053, inode 2229334): 3 files, no impossibilities.
# . (device 2053, inode 1708483): 6 files, no impossibilities so far.
# kern (device 2053, inode 2229172): 19 files, 1 impossibilities.
# boot (device 2053, inode 2229122): No files, no impossibilities so far.
# obj/boot: could not be stat'd.

# 33 files, 1 impossibilities in 7 directories.

# Implicit Rules

obj/.vars.%: FORCE
#  recipe to execute (from 'GNUmakefile', line 133):
	$(V)echo "$($*)" | cmp -s $@ || echo "$($*)" > $@

obj/boot/%.o: boot/%.c
#  recipe to execute (from 'boot/Makefrag', line 13):
	@echo + cc -Os $<
	@mkdir -p $(@D)
	$(V)$(CC) -nostdinc $(KERN_CFLAGS) -Os -c -o $@ $<

obj/boot/%.o: boot/%.S
#  recipe to execute (from 'boot/Makefrag', line 18):
	@echo + as $<
	@mkdir -p $(@D)
	$(V)$(CC) -nostdinc $(KERN_CFLAGS) -c -o $@ $<

obj/kern/%.o: kern/%.c obj/.vars.KERN_CFLAGS
#  recipe to execute (from 'kern/Makefrag', line 49):
	@echo + cc $<
	@mkdir -p $(@D)
	$(V)$(CC) -nostdinc $(KERN_CFLAGS) -c -o $@ $<

obj/kern/%.o: kern/%.S obj/.vars.KERN_CFLAGS
#  recipe to execute (from 'kern/Makefrag', line 54):
	@echo + as $<
	@mkdir -p $(@D)
	$(V)$(CC) -nostdinc $(KERN_CFLAGS) -c -o $@ $<

obj/kern/%.o: lib/%.c obj/.vars.KERN_CFLAGS
#  recipe to execute (from 'kern/Makefrag', line 59):
	@echo + cc $<
	@mkdir -p $(@D)
	$(V)$(CC) -nostdinc $(KERN_CFLAGS) -c -o $@ $<

# 6 implicit rules, 0 (0.0%) terminal.

# Files

# Not a target:
obj/net/%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

handin: tarball-pref myapi.key
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 226):
	@SUF=$(LAB); \
	test -f .suf && SUF=`cat .suf`; \
	curl -f -F file=@lab$$SUF-handin.tar.gz -F key=\<myapi.key $(WEBSUB)/upload \
	    > /dev/null || { \
		echo ; \
		echo Submit seems to have failed.; \
		echo Please go to $(WEBSUB)/ and upload the tarball manually.; }

qemu: obj/kern/kernel.img pre-qemu
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 157):
	$(QEMU) $(QEMUOPTS)

# Not a target:
obj/kern/entrypgdir.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

obj/kern/kernel.img: obj/kern/kernel obj/boot/boot
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/6=0%
#  recipe to execute (from 'kern/Makefrag', line 77):
	@echo + mk $@
	$(V)dd if=/dev/zero of=$(OBJDIR)/kern/kernel.img~ count=10000 2>/dev/null
	$(V)dd if=$(OBJDIR)/boot/boot of=$(OBJDIR)/kern/kernel.img~ conv=notrunc 2>/dev/null
	$(V)dd if=$(OBJDIR)/kern/kernel of=$(OBJDIR)/kern/kernel.img~ seek=1 conv=notrunc 2>/dev/null
	$(V)mv $(OBJDIR)/kern/kernel.img~ $(OBJDIR)/kern/kernel.img

# 'override' directive (from 'kern/Makefrag', line 64)
obj/kern/init.o: KERN_CFLAGS += $(INIT_CFLAGS)
obj/kern/init.o: obj/.vars.INIT_CFLAGS
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/2=0%

gdb:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 152):
	$(GDB) -n -x .gdbinit

all: obj/kern/kernel.img
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/6=0%

# Not a target:
%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

FORCE:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

.PHONY: FORCE all always handin git-handin tarball tarball-pref clean realclean distclean grade handin-prep handin-check
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

pre-qemu: .gdbinit
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
obj/kern/kdebug.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

handin-check:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 235):
	@if ! test -d .git; then \
		echo No .git directory, is this a git repository?; \
		false; \
	fi
	@if test "$$(git symbolic-ref HEAD)" != refs/heads/lab$(LAB); then \
		git branch; \
		read -p "You are not on the lab$(LAB) branch.  Hand-in the current branch? [y/N] " r; \
		test "$$r" = y; \
	fi
	@if ! git diff-files --quiet || ! git diff-index --quiet --cached HEAD; then \
		git status -s; \
		echo; \
		echo "You have uncomitted changes.  Please commit or stash them."; \
		false; \
	fi
	@if test -n "`git status -s`"; then \
		git status -s; \
		read -p "Untracked files will not be handed in.  Continue? [y/N] " r; \
		test "$$r" = y; \
	fi

.PRECIOUS: %.o obj/boot/%.o obj/kern/%.o obj/lib/%.o obj/fs/%.o obj/net/%.o obj/user/%.o obj/.vars.%
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

handin-prep:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
obj/kern/readline.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

distclean: realclean
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 194):
	rm -rf conf/gcc.mk

print-gdbport:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 181):
	@echo $(GDBPORT)

.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
obj/.vars.%:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

realclean: clean
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 188):
	rm -rf lab$(LAB).tar.gz \
		jos.out $(wildcard jos.out.*) \
		qemu.pcap $(wildcard qemu.pcap.*) \
		myapi.key

always:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 313):
	@:

print-qemu:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 178):
	@echo $(QEMU)

# Not a target:
.gdbinit.tmpl:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
conf/env.mk:
#  Implicit rule search has been done.
#  Last modified 2021-10-13 23:52:41.721919
 
#  File has been updated.
#  Successfully updated.

tarball:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
obj/kern/monitor.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

obj/.deps:
#  Implicit rule search has not been done.
#  Last modified 2021-11-01 13:31:08.039545241
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'GNUmakefile', line 307):
	@mkdir -p $(@D)
	@$(PERL) mergedep.pl $@ $^

grade:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 201):
	@echo $(MAKE) clean
	@$(MAKE) clean || \
	  (echo "'make clean' failed.  HINT: Do you have another running instance of JOS?" && exit 1)
	./grade-lab$(LAB) $(GRADEFLAGS)

# Not a target:
obj/boot/boot.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
obj/user/%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

obj/boot/boot: obj/boot/boot.o obj/boot/main.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'boot/Makefrag', line 27):
	@echo + ld boot/boot
	$(V)$(LD) $(LDFLAGS) -N -e start -Ttext 0x7C00 -o $@.out $^
	$(V)$(OBJDUMP) -S $@.out >$@.asm
	$(V)$(OBJCOPY) -S -O binary -j .text $@.out $@
	$(V)perl boot/sign.pl $(OBJDIR)/boot/boot

# Not a target:
boot/Makefrag:
#  Implicit rule search has been done.
#  Last modified 2021-10-13 23:52:41.721919
#  File has been updated.
#  Successfully updated.

# Not a target:
kern/Makefrag:
#  Implicit rule search has been done.
#  Last modified 2021-11-01 11:05:43.334192
#  File has been updated.
#  Successfully updated.

qemu-nox-gdb: obj/kern/kernel.img pre-qemu
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 172):
	@echo "***"
	@echo "*** Now run 'make gdb'." 1>&2
	@echo "***"
	$(QEMU) -nographic $(QEMUOPTS) -S

git-handin: handin-check
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 207):
	@if test -n "`git config remote.handin.url`"; then \
		echo "Hand in to remote repository using 'git push handin HEAD' ..."; \
		if ! git push -f handin HEAD; then \
            echo ; \
			echo "Hand in failed."; \
			echo "As an alternative, please run 'make tarball'"; \
			echo "and visit http://pdos.csail.mit.edu/6.828/submit/"; \
			echo "to upload lab$(LAB)-handin.tar.gz.  Thanks!"; \
			false; \
		fi; \
    else \
		echo "Hand-in repository is not configured."; \
		echo "Please run 'make handin-prep' first.  Thanks!"; \
		false; \
	fi

# Not a target:
obj/lib/%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
obj/kern/printfmt.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

obj/jos-grub: obj/kern/kernel
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'kern/Makefrag', line 88):
	@echo + oc $@
	$(V)$(OBJCOPY) --adjust-vma=0x10000000 $^ $@

obj/kern/kernel: obj/kern/entry.o obj/kern/entrypgdir.o obj/kern/init.o obj/kern/console.o obj/kern/monitor.o obj/kern/pmap.o obj/kern/kclock.o obj/kern/printf.o obj/kern/kdebug.o obj/kern/printfmt.o obj/kern/readline.o obj/kern/string.o kern/kernel.ld obj/.vars.KERN_LDFLAGS
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/6=0%
#  recipe to execute (from 'kern/Makefrag', line 70):
	@echo + ld $@
	$(V)$(LD) -o $@ $(KERN_LDFLAGS) $(KERN_OBJFILES) $(GCC_LIB) -b binary $(KERN_BINFILES)
	$(V)$(OBJDUMP) -S $@ > $@.asm
	$(V)$(NM) -n $@ > $@.sym

.gdbinit: .gdbinit.tmpl
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 149):
	sed "s/localhost:1234/localhost:$(GDBPORT)/" < $^ > $@

grub: obj/jos-grub
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
conf/lab.mk:
#  Implicit rule search has been done.
#  Last modified 2021-11-01 11:11:25.863806
#  File has been updated.
#  Successfully updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

obj/.vars.KERN_CFLAGS: FORCE
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'KERN_CFLAGS'
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := obj/.vars.KERN_CFLAGS
# automatic
# % := 
# automatic
# * := KERN_CFLAGS
# automatic
# + := FORCE
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE
# automatic
# ? := FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/18=6%
#  recipe to execute (from 'GNUmakefile', line 133):
	$(V)echo "$($*)" | cmp -s $@ || echo "$($*)" > $@

# Not a target:
obj/kern/pmap.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
obj/kern/string.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

qemu-gdb: obj/kern/kernel.img pre-qemu
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 166):
	@echo "***"
	@echo "*** Now run 'make gdb'." 1>&2
	@echo "***"
	$(QEMU) $(QEMUOPTS) -S

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 185):
	rm -rf $(OBJDIR) .gdbinit jos.in qemu.log

tarball-pref: handin-check
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 259):
	@SUF=$(LAB); \
	if test $(LAB) -eq 3 -o $(LAB) -eq 4; then \
		read -p "Which part would you like to submit? [a, b, c (c for lab 4 only)]" p; \
		if test "$$p" != a -a "$$p" != b; then \
			if test ! $(LAB) -eq 4 -o ! "$$p" = c; then \
				echo "Bad part \"$$p\""; \
				exit 1; \
			fi; \
		fi; \
		SUF="$(LAB)$$p"; \
		echo $$SUF > .suf; \
	else \
		rm -f .suf; \
	fi; \
	git archive --format=tar HEAD > lab$$SUF-handin.tar; \
	git diff $(UPSTREAM)/lab$(LAB) > /tmp/lab$$SUF-diff.patch; \
	tar -rf lab$$SUF-handin.tar /tmp/lab$$SUF-diff.patch; \
	gzip -c lab$$SUF-handin.tar > lab$$SUF-handin.tar.gz; \
	rm lab$$SUF-handin.tar; \
	rm /tmp/lab$$SUF-diff.patch; \


# Not a target:
kern/kernel.ld:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
obj/kern/printf.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
obj/fs/%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
obj/kern/%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
obj/.vars.KERN_LDFLAGS:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
GNUmakefile:
#  Implicit rule search has been done.
#  Last modified 2021-11-01 11:11:25.863806
#  File has been updated.
#  Successfully updated.

# Not a target:
obj/.vars.INIT_CFLAGS:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

myapi.key:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 281):
	@echo Get an API key for yourself by visiting $(WEBSUB)/
	@read -p "Please enter your API key: " k; \
	if test `echo "$$k" |tr -d '\n' |wc -c` = 32 ; then \
		TF=`mktemp -t tmp.XXXXXX`; \
		if test "x$$TF" != "x" ; then \
			echo "$$k" |tr -d '\n' > $$TF; \
			mv -f $$TF $@; \
		else \
			echo mktemp failed; \
			false; \
		fi; \
	else \
		echo Bad API key: $$k; \
		echo An API key should be 32 characters long.; \
		false; \
	fi;

qemu-nox: obj/kern/kernel.img pre-qemu
#  Implicit rule search has not been done.
 
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'GNUmakefile', line 160):
	@echo "***"
	@echo "*** Use Ctrl-a x to exit qemu"
	@echo "***"
	$(QEMU) -nographic $(QEMUOPTS)

# Not a target:
kern/entry.S:
#  Implicit rule search has been done.
#  Last modified 2021-11-01 11:05:43.334192
#  File has been updated.
#  Successfully updated.

.DELETE_ON_ERROR:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
obj/kern/console.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
boot/main.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

obj/kern/entry.o: kern/entry.S obj/.vars.KERN_CFLAGS
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'entry'
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/6=0%
#  recipe to execute (from 'kern/Makefrag', line 54):
	@echo + as $<
	@mkdir -p $(@D)
	$(V)$(CC) -nostdinc $(KERN_CFLAGS) -c -o $@ $<

# Not a target:
obj/boot/%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

obj/boot/main.o: boot/main.c
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'boot/Makefrag', line 23):
	@echo + cc -Os $<
	$(V)$(CC) -nostdinc $(KERN_CFLAGS) -Os -c -o $(OBJDIR)/boot/main.o boot/main.c

# Not a target:
obj/kern/kclock.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=68/1024=7%, Rehash=0, Collisions=11/169=7%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 111 / storage = 1243 B / avg = 11 B
# current buf: size = 8162 B / used = 1243 B / count = 111 / avg = 11 B

# strcache performance: lookups = 219 / hit rate = 49%
# hash-table stats:
# Load=111/8192=1%, Rehash=0, Collisions=6/219=3%
# Finished Make data base on Mon Nov  1 13:31:12 2021

 
